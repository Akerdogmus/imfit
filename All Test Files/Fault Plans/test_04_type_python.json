[
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total = len(nums1) len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total = len(nums1) - len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total = len(nums1) * len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total = len(nums1) / len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total = len(nums1) % len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total = len(nums1) ** len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total = len(nums1) // len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total = len(nums1) ++ len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total = len(nums1) -- len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total = len(nums1) ** len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total = len(nums1) // len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total = len(nums1) %% len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total = len(nums1) **** len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total = len(nums1) //// len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total += len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total -= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total *= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total /= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total %= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total //= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total **= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total &= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total |= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total ^= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total >>= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total <<= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total += len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total -= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total *= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total /= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total %= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total //= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total **= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total &= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total |= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total ^= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total >>= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total <<= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total == len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total +=+= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total -=-= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total *=*= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total /=/= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total %=%= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total //=//= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total **=**= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total &=&= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total |=|= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total ^=^= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total >>=>>= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total <<=<<=len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total == len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total +=+= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total -=-= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total *=*= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total /=/= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total %=%= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total //=//= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total **=**= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total &=&= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total |=|= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total ^=^= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total >>=>>= len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total <<=<<=len(nums1) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total = len( ) + len(nums2)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "total = len(nums1) + len(nums2)",
            "Mutate_Code": "total = len(nums1) + len(nums2) "
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B)   len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B) == len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B) != len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B) > len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B) >= len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B) <= len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B)  ====  len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B)  !==  len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B)  >>  len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B)  <<  len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B)  >=>=  len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B)  <=<=  len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": " "
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "elif:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "else:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if if"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len( ) < len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B) < len(A): "
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B)   len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B) == len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B) != len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B) > len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B) >= len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B) <= len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B)  ====  len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B)  !==  len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B)  >>  len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B)  <<  len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B)  >=>=  len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B)  <=<=  len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": " "
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "elif:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "else:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if if"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len( ) < len(A):"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if len(B) < len(A):",
            "Mutate_Code": "if len(B) < len(A): "
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r = 0, len(A) 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r = 0, len(A) + 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r = 0, len(A) * 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r = 0, len(A) / 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r = 0, len(A) % 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r = 0, len(A) ** 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r = 0, len(A) // 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r = 0, len(A) ++ 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r = 0, len(A) -- 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r = 0, len(A) ** 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r = 0, len(A) // 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r = 0, len(A) %% 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r = 0, len(A) **** 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r = 0, len(A) //// 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r += 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r -= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r *= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r /= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r %= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r //= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r **= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r &= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r |= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r ^= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r >>= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r <<= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r += 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r -= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r *= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r /= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r %= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r //= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r **= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r &= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r |= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r ^= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r >>= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r <<= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r == 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r +=+= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r -=-= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r *=*= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r /=/= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r %=%= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r //=//= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r **=**= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r &=&= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r |=|= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r ^=^= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r >>=>>= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r <<=<<=0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r == 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r +=+= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r -=-= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r *=*= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r /=/= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r %=%= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r //=//= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r **=**= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r &=&= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r |=|= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r ^=^= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r >>=>>= 0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r <<=<<=0, len(A) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "l, r = 0, len(A) - 1",
            "Mutate_Code": "l, r = 0, len( ) - 1"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "while True:",
            "Mutate_Code": "while  :"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "while True:",
            "Mutate_Code": "while False:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "while True:",
            "Mutate_Code": "while True True:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "while True:",
            "Mutate_Code": " "
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "while True:",
            "Mutate_Code": "for "
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "while True:",
            "Mutate_Code": "while while:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "while True:",
            "Mutate_Code": "while  :"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "while True:",
            "Mutate_Code": "while False:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "while True:",
            "Mutate_Code": "while True True:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "while True:",
            "Mutate_Code": " "
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "while True:",
            "Mutate_Code": "for "
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "while True:",
            "Mutate_Code": "while while:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft += A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft -= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft *= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft /= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft %= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft //= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft **= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft &= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft |= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft ^= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft >>= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft <<= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft += A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft -= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft *= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft /= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft %= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft //= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft **= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft &= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft |= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft ^= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft >>= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft <<= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft == A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft +=+= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft -=-= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft *=*= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft /=/= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft %=%= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft //=//= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft **=**= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft &=&= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft |=|= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft ^=^= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft >>=>>= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft <<=<<=A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft == A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft +=+= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft -=-= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft *=*= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft /=/= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft %=%= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft //=//= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft **=**= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft &=&= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft |=|= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft ^=^= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft >>=>>= A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft <<=<<=A[i] if i >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft = A[i] if i   0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft = A[i] if i == 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft = A[i] if i != 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft = A[i] if i > 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft = A[i] if i < 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft = A[i] if i <= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft = A[i] if i  ====  0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft = A[i] if i  !==  0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft = A[i] if i  >>  0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft = A[i] if i  <<  0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft = A[i] if i  >=>=  0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft = A[i] if i  <=<=  0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aleft = A[i] if i >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Aleft = A[i] if i >= 0 else float( )"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i - 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i * 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i / 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i % 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i ** 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i // 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i - 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i * 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i / 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i % 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i ** 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i // 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i ++ 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i -- 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i ** 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i // 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i %% 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i **** 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i //// 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i ++ 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i -- 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i ** 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i // 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i %% 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i **** 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i //// 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright += A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright -= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright *= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright /= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright %= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright //= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright **= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright &= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright |= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright ^= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright >>= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright <<= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright += A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright -= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright *= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright /= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright %= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright //= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright **= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright &= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright |= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright ^= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright >>= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright <<= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright == A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright +=+= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright -=-= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright *=*= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright /=/= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright %=%= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright //=//= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright **=**= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright &=&= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright |=|= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright ^=^= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright >>=>>= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright <<=<<=A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright == A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright +=+= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright -=-= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright *=*= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright /=/= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright %=%= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright //=//= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright **=**= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright &=&= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright |=|= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright ^=^= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright >>=>>= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright <<=<<=A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1)   len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1) == len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1) != len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1) > len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1) >= len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1) <= len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1)  ====  len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1)  !==  len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1)  >>  len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1)  <<  len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1)  >=>=  len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1)  <=<=  len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float( )"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": " right = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i - 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i * 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i / 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i % 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i ** 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i // 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i - 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i * 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i / 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i % 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i ** 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i // 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i ++ 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i -- 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i ** 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i // 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i %% 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i **** 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i //// 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i ++ 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i -- 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i ** 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i // 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i %% 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i **** 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i //// 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright += A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright -= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright *= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright /= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright %= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright //= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright **= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright &= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright |= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright ^= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright >>= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright <<= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright += A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright -= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright *= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright /= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright %= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright //= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright **= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright &= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright |= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright ^= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright >>= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright <<= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright == A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright +=+= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright -=-= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright *=*= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright /=/= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright %=%= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright //=//= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright **=**= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright &=&= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright |=|= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright ^=^= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright >>=>>= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright <<=<<=A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright == A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright +=+= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright -=-= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright *=*= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright /=/= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright %=%= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright //=//= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright **=**= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright &=&= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright |=|= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright ^=^= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright >>=>>= A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright <<=<<=A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1)   len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1) == len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1) != len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1) > len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1) >= len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1) <= len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1)  ====  len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1)  !==  len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1)  >>  len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1)  <<  len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1)  >=>=  len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1)  <=<=  len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float( )"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Aright = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")",
            "Mutate_Code": " right = A[i + 1] if (i + 1) < len(A) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft += B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft -= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft *= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft /= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft %= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft //= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft **= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft &= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft |= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft ^= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft >>= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft <<= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft += B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft -= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft *= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft /= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft %= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft //= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft **= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft &= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft |= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft ^= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft >>= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft <<= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft == B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft +=+= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft -=-= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft *=*= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft /=/= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft %=%= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft //=//= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft **=**= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft &=&= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft |=|= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft ^=^= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft >>=>>= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft <<=<<=B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft == B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft +=+= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft -=-= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft *=*= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft /=/= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft %=%= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft //=//= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft **=**= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft &=&= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft |=|= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft ^=^= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft >>=>>= B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft <<=<<=B[j] if j >= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft = B[j] if j   0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft = B[j] if j == 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft = B[j] if j != 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft = B[j] if j > 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft = B[j] if j < 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft = B[j] if j <= 0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft = B[j] if j  ====  0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft = B[j] if j  !==  0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft = B[j] if j  >>  0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft = B[j] if j  <<  0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft = B[j] if j  >=>=  0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft = B[j] if j  <=<=  0 else float(\"-infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bleft = B[j] if j >= 0 else float(\"-infinity\")",
            "Mutate_Code": "Bleft = B[j] if j >= 0 else float( )"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j - 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j * 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j / 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j % 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j ** 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j // 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j - 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j * 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j / 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j % 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j ** 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j // 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j ++ 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j -- 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j ** 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j // 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j %% 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j **** 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j //// 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j ++ 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j -- 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j ** 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j // 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j %% 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j **** 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j //// 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright += B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright -= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright *= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright /= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright %= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright //= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright **= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright &= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright |= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright ^= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright >>= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright <<= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright += B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright -= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright *= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright /= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright %= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright //= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright **= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright &= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright |= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright ^= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright >>= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright <<= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright == B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright +=+= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright -=-= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright *=*= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright /=/= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright %=%= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright //=//= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright **=**= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright &=&= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright |=|= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright ^=^= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright >>=>>= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright <<=<<=B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright == B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright +=+= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright -=-= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright *=*= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright /=/= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright %=%= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright //=//= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright **=**= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright &=&= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright |=|= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright ^=^= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright >>=>>= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright <<=<<=B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1)   len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1) == len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1) != len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1) > len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1) >= len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1) <= len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1)  ====  len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1)  !==  len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1)  >>  len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1)  <<  len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1)  >=>=  len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1)  <=<=  len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float( )"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": " right = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j - 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j * 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j / 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j % 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j ** 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j // 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j - 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j * 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j / 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j % 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j ** 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j // 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j ++ 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j -- 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j ** 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j // 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j %% 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j **** 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j //// 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j ++ 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j -- 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j ** 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j // 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j %% 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j **** 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j //// 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright += B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright -= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright *= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright /= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright %= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright //= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright **= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright &= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright |= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright ^= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright >>= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright <<= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright += B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright -= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright *= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright /= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright %= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright //= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright **= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright &= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright |= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright ^= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright >>= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright <<= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright == B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright +=+= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright -=-= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright *=*= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright /=/= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright %=%= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright //=//= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright **=**= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright &=&= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright |=|= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright ^=^= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright >>=>>= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright <<=<<=B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright == B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright +=+= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright -=-= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright *=*= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright /=/= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright %=%= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright //=//= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright **=**= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright &=&= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright |=|= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright ^=^= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright >>=>>= B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright <<=<<=B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1)   len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1) == len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1) != len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1) > len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1) >= len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1) <= len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1)  ====  len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1)  !==  len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1)  >>  len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1)  <<  len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1)  >=>=  len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1)  <=<=  len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float( )"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "Bright = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")",
            "Mutate_Code": " right = B[j + 1] if (j + 1) < len(B) else float(\"infinity\")"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft   Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft   Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft == Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft != Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft > Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft < Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft >= Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft == Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft != Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft > Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft < Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft >= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft  ====  Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft  !==  Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft  >>  Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft  <<  Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft  >=>=  Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft  <=<=  Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft  ====  Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft  !==  Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft  >>  Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft  <<  Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft  >=>=  Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft  <=<=  Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright or Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright not Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright or or Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright not not Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": " "
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "elif:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "else:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if if"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft   Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft   Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft == Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft != Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft > Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft < Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft >= Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft == Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft != Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft > Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft < Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft >= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft  ====  Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft  !==  Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft  >>  Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft  <<  Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft  >=>=  Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft  <=<=  Bright and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft  ====  Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft  !==  Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft  >>  Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft  <<  Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft  >=>=  Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and Bleft  <=<=  Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright or Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright not Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright and and Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright or or Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if Aleft <= Bright not not Bleft <= Aright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": " "
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "elif:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "else:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if Aleft <= Bright and Bleft <= Aright:",
            "Mutate_Code": "if if"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if total % 2:",
            "Mutate_Code": "if total 2:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if total % 2:",
            "Mutate_Code": "if total + 2:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if total % 2:",
            "Mutate_Code": "if total - 2:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if total % 2:",
            "Mutate_Code": "if total * 2:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if total % 2:",
            "Mutate_Code": "if total / 2:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if total % 2:",
            "Mutate_Code": "if total ** 2:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if total % 2:",
            "Mutate_Code": "if total // 2:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if total % 2:",
            "Mutate_Code": "if total ++ 2:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if total % 2:",
            "Mutate_Code": "if total -- 2:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if total % 2:",
            "Mutate_Code": "if total ** 2:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if total % 2:",
            "Mutate_Code": "if total // 2:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if total % 2:",
            "Mutate_Code": "if total %% 2:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if total % 2:",
            "Mutate_Code": "if total **** 2:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if total % 2:",
            "Mutate_Code": "if total //// 2:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if total % 2:",
            "Mutate_Code": " "
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if total % 2:",
            "Mutate_Code": "elif:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if total % 2:",
            "Mutate_Code": "else:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "if total % 2:",
            "Mutate_Code": "if if"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return min(Aright, Bright)",
            "Mutate_Code": " min(Aright, Bright)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return min(Aright, Bright)",
            "Mutate_Code": "passmin(Aright, Bright)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return min(Aright, Bright)",
            "Mutate_Code": "return returnmin(Aright, Bright)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return min(Aright, Bright)",
            "Mutate_Code": "return min( )"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return min(Aright, Bright)",
            "Mutate_Code": " min(Aright, Bright)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return min(Aright, Bright)",
            "Mutate_Code": "passmin(Aright, Bright)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return min(Aright, Bright)",
            "Mutate_Code": "return returnmin(Aright, Bright)"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return min(Aright, Bright)",
            "Mutate_Code": "return min( )"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) - min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) * min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) / min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) % min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) ** min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) // min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) + 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) - 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) * 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) % 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) ** 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) // 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) ++ min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) -- min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) ** min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) // min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) %% min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) **** min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) //// min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) ++ 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) -- 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) ** 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) // 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) %% 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) **** 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) //// 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": " (max(Aleft, Bleft) + min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "pass(max(Aleft, Bleft) + min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return return(max(Aleft, Bleft) + min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max( ) + min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min( )) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) - min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) * min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) / min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) % min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) ** min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) // min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) + 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) - 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) * 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) % 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) ** 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) // 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) ++ min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) -- min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) ** min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) // min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) %% min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) **** min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) //// min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) ++ 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) -- 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) ** 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) // 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) %% 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) **** 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) //// 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": " (max(Aleft, Bleft) + min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "pass(max(Aleft, Bleft) + min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return return(max(Aleft, Bleft) + min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max( ) + min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min( )) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) - min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) * min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) / min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) % min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) ** min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) // min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) + 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) - 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) * 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) % 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) ** 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) // 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) ++ min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) -- min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) ** min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) // min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) %% min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) **** min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) //// min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) ++ 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) -- 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) ** 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) // 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) %% 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) **** 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) //// 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": " (max(Aleft, Bleft) + min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "pass(max(Aleft, Bleft) + min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return return(max(Aleft, Bleft) + min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max( ) + min(Aright, Bright)) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "return (max(Aleft, Bleft) + min(Aright, Bright)) / 2",
            "Mutate_Code": "return (max(Aleft, Bleft) + min( )) / 2"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft   Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft == Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft != Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft < Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft >= Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft <= Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft  ====  Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft  !==  Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft  >>  Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft  <<  Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft  >=>=  Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft  <=<=  Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "el "
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elelif:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elelse:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif if"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": " "
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "if:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "else:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif elif"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft   Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft == Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft != Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft < Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft >= Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft <= Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft  ====  Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft  !==  Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft  >>  Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft  <<  Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft  >=>=  Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif Aleft  <=<=  Bright:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "el "
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elelif:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elelse:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif if"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": " "
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "if:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "else:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "elif Aleft > Bright:",
            "Mutate_Code": "elif elif"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "else:",
            "Mutate_Code": " "
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "else:",
            "Mutate_Code": "if:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "else:",
            "Mutate_Code": "elif:"
        }
    },
    {
        "Fault": {
            "File_Directory": "/home/ino/Desktop/50 LeetCode Problem Solution/T4_LCPN_4-median-of-two-sorted-arrays.py",
            "Source_Code": "else:",
            "Mutate_Code": "else else:"
        }
    }
]